// Constants for selecting headings
var HEADING_LIST = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
var HEADING_SEL = HEADING_LIST.join(', ');

// Constants for class names used in structuring the headings
var START_NODE_CLASS = 'structured-headings-start';
var NUMBERING_SPAN_CLASS = 'structured-heading-numbering';
var LEVEL_CLASSES = ['structured-heading-level1',
                     'structured-heading-level2',
                     'structured-heading-level3',
                     'structured-heading-level4',
                     'structured-heading-level5',
                     'structured-heading-level6'];

/*
    numberHeadingsIE7
    =================

    Stand-alone function from WYMeditor that manually numbers the headings in a
    document using javascript to mimick the heading numbering generated by the
    structured headings plugin using CSS in browsers that support CSS counters
    and :before pseudo-elements. Meant in particular to add structured heading
    support to IE7.

    The doc parameter specifies the document which contains the headings to be
    numbered. It defaults to the document object of the page if the parameter
    isn't given. The addClass parameter specifies whether the structured
    headings classes need to be added to the headings as the numbering is added
    to the headings. It defaults to false if the parameter isn't given.

    Both of these parameters are optional so that, in most cases, if a user is
    calling this function on a page to number a document's headings outside of
    the editor, they can call the function with no parameters.

    The function returns the total number of characters in all of the added
    heading numbering spans so that it can be monitored if the headings need to
    be corrected if the total number of characters in the numbering spans
    changes.

    NOTE: Although this function is stand-alone from WYMeditor, it still
    requires jQuery.
*/
function numberHeadingsIE7(doc, addClass) {
    var doc = typeof doc !== 'undefined' ? doc : document,
        $doc = jQuery(doc),

        $startNode = $doc.find(START_NODE_CLASS),
        startIndex,
        adjustedHeadingSel,

        $allHeadings,
        $toTrim,
        $heading,
        headingNum,
        headingLabel,

        span,
        spanCharTotal,

        counters = [0, 0, 0, 0, 0, 0],
        i,
        j;

    // If no start node is set and addClass is true, set the start node as the
    // first heading in doc by default.
    if (addClass && !$startNode.length) {
        $startNode = $doc.find(HEADING_SEL);
        if ($startNode.length) {
            $startNode = $startNode.eq(0);
            $startNode.addClass(START_NODE_CLASS);
        }
    }
    // If there are no headings in the document or if no start node is defined
    // and addClass is false, do nothing.
    if (!$startNode.length) {
        return;
    }

    // Ignore headings above the level of the start node
    startIndex = parseInt($startNode[0].nodeName.slice(-1), 10) - 1;
    adjustedHeadingSel = HEADING_LIST.slice(startIndex,
                                            HEADING_LIST.length).join(', ');
    $allHeadings = $startNode.nextAll(adjustedHeadingSel).add($startNode);

    // Remove any previously calculated heading numbering
    $doc.find('.' + NUMBERING_SPAN_CLASS).remove();

    for (i = 0; i < $allHeadings.length; ++i) {
        $heading = $allHeadings.eq(i);
        headingNum = parseInt($heading[0].nodeName.slice(-1), 10) -
                     (startIndex + 1);

        // Calculate the heading label
        ++counters[headingNum];
        headingLabel = '';
        for (j = 0; j <= headingNum; ++j) {
            if (j === headingNum) {
                headingLabel += counters[j];
            } else {
                headingLabel += counters[j] + '.';
            }
        }
        if (addClass) {
            $heading.addClass(LEVEL_CLASSES[headingNum]);
        }

        // Prepend span containing the heading's label to heading
        span = doc.createElement('span');
        span.innerHTML = headingLabel;
        span.className = NUMBERING_SPAN_CLASS;
        $heading.prepend(span);
        spanCharTotal += (headingNum * 2) + 1;

        // Reset counters below the heading's level
        for (j = headingNum + 1; j < counters.length; ++j) {
            counters[j] = 0;
        }
    }

    return spanCharTotal;
}

